<MudDialog>
    <DialogContent>
        <MudForm @ref="_form">
            <MudPaper Class="p-4">
                <MudTextField @bind-Value="Country.Id" Label="Id" Disabled="true" Variant="Variant.Filled" Class="mb-4" />
                <MudTextField @bind-Value="Country.Name" Label="Name" Required="true" For="@(() => Country.Name)" RequiredError="Name is required." Variant="Variant.Filled" Class="mb-4" />
                <MudStack Row="true" Justify="Justify.FlexEnd" Class="mt-6">
                    <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Save">Save</MudButton>
                    <MudButton OnClick="Cancel" Color="Color.Secondary" Variant="Variant.Outlined">Cancel</MudButton>
                </MudStack>
            </MudPaper>
        </MudForm>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public Country Country { get; set; } = new();
    [Inject] private ISnackbar Snackbar { get; set; } = default!;

    private MudForm _form = default!;

    private async void Save()
    {
        await _form.Validate();

        if (_form.IsValid)
        {
            if (Country.Id > 0)
            {
                var result = await countryService.Update(Country, Constants.CountryBaseUrl);
                Snackbar.Add(result.Message, result.Flag ? Severity.Success : Severity.Error);
            }
            else
            {
                var result = await countryService.Insert(Country, Constants.CountryBaseUrl);
                Snackbar.Add(result.Message, result.Flag ? Severity.Success : Severity.Error);
            }
            MudDialog.Close(DialogResult.Ok(true));
        }

    }
    private void Cancel() => MudDialog.Cancel();
}