<MudDialog>
    <DialogContent>
         <MudForm>
            <MudTextField T="int" Label="Id" @bind-Value="Branch.Id" Disabled="true" />
            <MudTextField T="string" Label="Name" @bind-Value="Branch.Name" Required="true" />
            <MudSelect T="int" Label="Select Department" @bind-Value="Branch.DepartmentId" Required="true">
                @foreach (var dept in Departments)
                {
                    <MudSelectItem Value="@dept.Id">@dept.Name</MudSelectItem>
                }
            </MudSelect>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Save">Save</MudButton>
        <MudButton Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public Branch Branch { get; set; } = new();
    [Parameter] public List<Department> Departments { get; set; } = new();
    [Parameter] public EventCallback<Branch> HandleSaveOperationEvent { get; set; }
    [Inject]
    private IDialogService DialogService { get; set; }
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }
    [Inject]
    private ISnackbar Snackbar { get; set; }
    public string Title { get; set; } = "Add";

    private void Save()
    {
        if (string.IsNullOrWhiteSpace(Branch.Name) || Branch.DepartmentId == 0)
        {
            Snackbar.Add("You need to provide Branch name and select a Department.", Severity.Warning);
            return;
        }
        MudDialog.Close(DialogResult.Ok(Branch));
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    public void ChangeTitle(string title)
    {
        Title = title;
    }
}
