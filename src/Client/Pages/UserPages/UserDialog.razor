@inject IDialogService DialogService

<MudDialog >
    <DialogContent>
        <EditForm Model="ManageUser" Enhance On OnSubmit="Save">
            <div class="card-border-success">
                <div class="card-body">
                    <div class="form-group">
                        <label class="form-label">Name</label>
                        <input @bind="ManageUser.Name" class="form-control" disabled/>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Email</label>
                        <InputText @bind-Value="ManageUser.Email" class="form-control" disabled />
                    </div>
                    <div class="form-group mt-3 mb-3">
                        <label class="form-label">Select Role</label>

                        @if (string.IsNullOrEmpty(ManageUser.Role))
                        {
                            string selected = ManageUser.Role!;                          
                            <MudSelect T="string" Label="Select Role" @bind-Value="selected">
                                @foreach (var role in SystemRoles)
                                {
                                    <MudSelectItem Value="@role">@role</MudSelectItem>
                                }                               
                            </MudSelect>
                        }
                        else
                        {
                            <MudSelect T="string" Label="Select Role">
                                @foreach (var role in SystemRoles)
                                {
                                    <MudSelectItem Value="@role">@role</MudSelectItem>
                                }
                            </MudSelect>
                        }
                    </div>
                </div>
            </div>
        </EditForm>      
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Save">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public ManageUser ManageUser { get; set; } = new();
    [Parameter] public List<SystemRole> SystemRoles { get; set; } = new();
    [Parameter] public EventCallback<ManageUser> HandleSaveOperationEvent { get; set; }
    
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }
    
    private bool IsVisible { get; set; } = false;
    public string Title { get; set; } = "Add";

    private async void Save()
    {
        if (string.IsNullOrEmpty(ManageUser.Name) || string.IsNullOrEmpty(ManageUser.Role))
            await dialogService.AlertAsync("You need to provide Role Name.", "Alert!");
        else
            await HandleSaveOperationEvent.InvokeAsync(ManageUser);
    }
    public void OpenDialog()
    {
        IsVisible = true;
        StateHasChanged();
    }    

    public void ChangeTitle(string title)
    {
        Title = title;
    }
    public void OnValueChange(ChangeEventArgs<string, SystemRole> args)
    {
        ManageUser.Role = args.Value.ToString();
    }
    
    private void Cancel() => MudDialog.Cancel();

    public async Task OpenDialogAsync()
    {
        //var options = new DialogOptions { CloseOnEscapeKey = true };
        var dialogReference = await DialogService.ShowAsync<UserDialog>("Update User");
        StateHasChanged();
    }
}
