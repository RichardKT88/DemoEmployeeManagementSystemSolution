<MudGrid>
    <MudItem xs="12" sm="6" md="2">
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" FullWidth="true" Class="interactive-card d-flex align-items-center justify-start">
            <MudIcon Icon="@Icons.Material.Filled.Group" Color="Color.Primary" Class="mr-1" />
            <MudText Typo="Typo.subtitle1" Class="d-flex align-items-center">
                Employees
                <MudBadge Color="Color.Primary" Content="@Employees.Count" Class="ml-3" Style="vertical-align: middle;" />
            </MudText>
        </MudButton>
    </MudItem>

    <MudItem xs="12" sm="6" md="2">
        <MudButton Variant="Variant.Outlined" Color="Color.Success" FullWidth="true" Class="interactive-card d-flex align-items-center justify-start" OnClick="VacationClicked">
            <MudIcon Icon="@Icons.Material.Filled.BeachAccess" Color="Color.Success" Class="mr-1" />
            <MudText Typo="Typo.subtitle1" Class="d-flex align-items-center">
                Vacation
                <MudBadge Color="Color.Success" Content="@Vacations.Count" Class="ml-3" Style="vertical-align: middle;" />
            </MudText>
        </MudButton>
    </MudItem>

    <MudItem xs="12" sm="6" md="2">
        <MudButton Variant="Variant.Outlined" Color="Color.Error" FullWidth="true" Class="interactive-card d-flex align-items-center justify-start" OnClick="OvertimeClicked">
            <MudIcon Icon="@Icons.Material.Filled.AccessTime" Color="Color.Error" Class="mr-1" />
            <MudText Typo="Typo.subtitle1" Class="d-flex align-items-center">
                Overtime
                <MudBadge Color="Color.Error" Content="@Overtimes.Count" Class="ml-3" Style="vertical-align: middle;" />
            </MudText>
        </MudButton>
    </MudItem>

    <MudItem xs="12" sm="6" md="2">
        <MudButton Variant="Variant.Outlined" Color="Color.Warning" FullWidth="true" Class="interactive-card d-flex align-items-center justify-start" OnClick="HealthClicked">
            <MudIcon Icon="@Icons.Material.Filled.LocalHospital" Color="Color.Warning" Class="mr-1" />
            <MudText Typo="Typo.subtitle1" Class="d-flex align-items-center">
                Health
                <MudBadge Color="Color.Warning" Content="@Health.Count" Class="ml-3" Style="vertical-align: middle;" />
            </MudText>
        </MudButton>
    </MudItem>

    <MudItem xs="12" sm="6" md="2">
        <MudButton Variant="Variant.Outlined" Color="Color.Info" FullWidth="true" Class="interactive-card d-flex align-items-center justify-start" OnClick="SanctionClicked">
            <MudIcon Icon="@Icons.Material.Filled.Block" Color="Color.Info" Class="mr-1" />
            <MudText Typo="Typo.subtitle1" Class="d-flex align-items-center">
                Sanctions
                <MudBadge Color="Color.Info" Content="@Sanctions.Count" Class="ml-3" Style="vertical-align: middle;" />
            </MudText>
        </MudButton>
    </MudItem>

    <MudItem xs="12" sm="6" md="2">
        <MudButton Variant="Variant.Outlined" Color="Color.Dark" FullWidth="true" Class="interactive-card d-flex align-items-center justify-start">
            <MudIcon Icon="@Icons.Material.Filled.Apartment" Color="Color.Dark" Class="mr-1" />
            <MudText Typo="Typo.subtitle1" Class="d-flex align-items-center">
                Departments
                <MudBadge Color="Color.Dark" Content="@Departments.Count" Class="ml-3" Style="vertical-align: middle;" />
            </MudText>
        </MudButton>
    </MudItem>
</MudGrid>
@code {
    public List<Employee> Employees { get; set; } = new();
    public List<Department> Departments { get; set; } = new();
    public List<Overtime> Overtimes { get; set; } = new();
    public List<Sanction> Sanctions { get; set; } = new();
    public List<Vacation> Vacations { get; set; } = new();
    public List<Doctor> Health { get; set; } = new();

    protected async override Task OnInitializedAsync()
    {
        allState.Action += StateHasChanged;
        await LoadDefaults();
    }

    async Task LoadDefaults()
    {
        Employees = await employeeService.GetAll(Constants.EmployeeBaseUrl);
        Departments = await departmentService.GetAll(Constants.DepartmentBaseUrl);
        Overtimes = await overtimeService.GetAll(Constants.OvertimeBaseUrl);
        Sanctions = await sanctionService.GetAll(Constants.SanctionBaseUrl);
        Vacations = await vacationService.GetAll(Constants.VacationBaseUrl);
        Health = await doctorService.GetAll(Constants.DoctorBaseUrl);
    }

    void HealthClicked() => allState.HealthClicked();
    void OvertimeClicked() => allState.OvertimeClicked();
    void SanctionClicked() => allState.SanctionClicked();
    void VacationClicked() => allState.VacationClicked();

    public void Dispose() => allState.Action -= StateHasChanged;
}
